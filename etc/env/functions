check_virtualenv() {
  VENV1=`find . |grep "./*/bin/activate$" || echo ""`
  if ! [ -z "$VENV1" ]; then
    for i in $VENV1; do COUNT=$((COUNT+1)); done
    if [ "$FORCE" == "false" ]; then if [ $COUNT -gt 1 ]; then echo -e "hai più di un VENV : \n$VENV1 \n\nRimuovine uno e rilancia : $0"; exit; else echo -e "Detected VENV : $VENV1\n"; fi; fi
  fi

  if [ -f $VENV ] && ! [ -z $VENV ] ; then
      echo -e "Virtual environment '$VENV' already exists. Aborting.\n"
  else
      echo "virtualenv is not installed. Installing..."
      python3 -m venv `echo $VENV | cut -d"/" -f2`
      echo -e "virtualenv installation complete. \nVENV name : $VENV\n"
  fi

  echo -e "\nInstall pip packages...\n"
  
  VENV_BIN="$(echo $VENV | cut -d"/" -f2)/bin"
  $VENV_BIN/pip install -U pip
  $VENV_BIN/pip install -c $UPPER_CONSTRAINTS -r requirement.txt

  echo -e "\nCreating list of custom playbooks..."

  pb_tune

  echo -en "\nConfiguring right venv path... "

  $VENV_BIN/yq '.myvenv = "'`echo ${VENV:2:-13}`'"' $VAR_FILE |python3 -c 'import sys, yaml, json; print(yaml.dump(json.loads(sys.stdin.read())))' > $VAR_FILE.tmp && mv $VAR_FILE.tmp $VAR_FILE && echo -e "DONE\n"

}

function fill_password_file {
  source $VENV

  echo -e "Remove old password link"
  rm "$CONF_DIR/$PASSWORD_FILE" || true
  cp "${INVENTORY}group_vars/all/$PASSWORD_FILE" "$CONF_DIR/$PASSWORD_FILE"

  echo -e "\nGenerating Random Passwords for $CONF_DIR/$PASSWORD_FILE"
  kolla-genpwd -p "$CONF_DIR/$PASSWORD_FILE"
  
  mv "$CONF_DIR/$PASSWORD_FILE" "${INVENTORY}group_vars/all/"
  ln -s "${INVENTORY}group_vars/all/$PASSWORD_FILE" "$CONF_DIR/$PASSWORD_FILE"
  

}

## Viene aperto il link 'vars.yaml' nella radice e legge la lista di pacchetti da installare come local prereq
function install_local_required_pckgs {

echo -en "\nLoad pkgs... "
#PKGS="`$VENV_BIN/yq -r .pkgs $VAR_FILE | yq .[] |xargs `" && echo -e "DONE"
PKGS="`awk '$1 == "-"{ if (key == "pkgs:") print $NF; next } {key=$1}' $VAR_FILE | xargs`"

echo -e "\nInstalling needed OS PKGS... \n"
for i in yum apt pkg dnf; do
  if which $i 1> /dev/null; then 
    /usr/bin/sudo $i -y install $PKGS
#    $i -y install $PKGS
  fi
done

echo -e "DONE"
}


function run_kolla {

[ -e $VENV ] && source $VENV || { echo -e "\n## ERROR!!! ##\nCan't load VENV: $VENV \nYou have to run INITILIZE before to proceed...\n\nUsage:\n  $0 initialize\n\n"; exit 1; }

if [ "$1" == "post-deploy" ]; then
  # Aggiungi al .gitignore solo se non già presente
  if ! grep -Fxq "`echo $CRED_DIR`" .gitignore; then
    echo "`echo ${CRED_DIR#$PWD/}`" >> .gitignore
  fi
  mkdir -p "$CRED_DIR"
  CUSTOM_CONF_DIR="$CRED_DIR"
else
  CUSTOM_CONF_DIR="$CONF_DIR"
fi

EXTRA_OPTS=$ANSIBLE_EXTRA_OPTS   kolla-ansible $1 \
    --inventory $INVENTORY \
    --passwords $CONF_DIR/$PASSWORD_FILE \
    --configdir $CONF_DIR \
    --extra "node_custom_config=$CONF_DIR/config" \
    --extra "CONFIG_DIR=$CUSTOM_CONF_DIR/" \
    $2

}
