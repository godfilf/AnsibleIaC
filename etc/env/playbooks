function pb_tune {

  source $VENV

  ## cancella definitivamente l'elemento lista
  ##     yq -Y -i 'del(.myplaybooks)' $VAR_FILE
  ## Svuota l'elemento lista. Se non esiste, lo crea
  #$VENV_BIN/yq -Y -i '.myplaybooks = []' $VAR_FILE
  $VIRTUAL_ENV/bin/yq -Y -i '.myplaybooks = []' $VAR_FILE

  for i in `ls -p $PB_PATH |grep -v '/$'`; do yq -Y -i '.myplaybooks += ["'${i%.*}'"]' $VAR_FILE; done

}

function pb_run {

  source $VENV
  echo -e "
===========================================
#  RUN CUSTOM PLAYBOOKS: $1 
===========================================\n"
  if [ -n "${USE_VAULT+x}" ] && [ $USE_VAULT == "true" ]; then VAULT_PARAM="--vault-password-file $MYVAULTFILE"; else VAULT_PARAM=""; fi
  ansible-playbook $VAULT_PARAM -i $INVENTORY $1 $2 && return
  echo -e "
===========================================
#  END CUSTOM PLAYBOOKS: $1 
===========================================\n"

  exit 1

}

function pb_chk {

  if [ "$FORCE" == "false" ]; then
    for COMMANDS in ${ALL_CMD[@]}; do
      if echo $ARGS | grep "$COMMANDS" 1> /dev/null; then
        CMD_COUNT=1 && break
      fi
    done
  else
    CMD_COUNT=1
  fi
  
  for PB_NAME in `echo $1 |sed -e 's/,/ /g'`; do 
    [ "`yq 'IN(.myplaybooks[]; "'$PB_NAME'")' $VAR_FILE`" == "true" ] || { echo -e "Some Playbook does not exist: $PB_NAME\n"; exit 1; }
  done

}
