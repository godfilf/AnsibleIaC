"create_bgp_speaker": "rule:admin_only"
"update_bgp_speaker": "rule:admin_only"
"delete_bgp_speaker": "rule:admin_only"
"get_bgp_speaker": "rule:admin_only"
"add_bgp_peer": "rule:admin_only"
"remove_bgp_peer": "rule:admin_only"
"add_gateway_network": "rule:admin_only"
"remove_gateway_network": "rule:admin_only"
"get_advertised_routes": "rule:admin_only"
"create_bgp_peer": "rule:admin_only"
"update_bgp_peer": "rule:admin_only"
"delete_bgp_peer": "rule:admin_only"
"get_bgp_peer": "rule:admin_only"
"add_bgp_speaker_to_dragent": "rule:admin_only"
"remove_bgp_speaker_from_dragent": "rule:admin_only"
"list_bgp_speaker_on_dragent": "rule:admin_only"
"list_dragent_hosting_bgp_speaker": "rule:admin_only"
"create_flow_classifier": "rule:regular_user"
"update_flow_classifier": "rule:admin_or_owner"
"delete_flow_classifier": "rule:admin_or_owner"
"get_flow_classifier": "rule:admin_or_owner"
"create_port_chain": "rule:regular_user"
"update_port_chain": "rule:admin_or_owner"
"delete_port_chain": "rule:admin_or_owner"
"get_port_chain": "rule:admin_or_owner"
"create_port_pair_group": "rule:regular_user"
"update_port_pair_group": "rule:admin_or_owner"
"delete_port_pair_group": "rule:admin_or_owner"
"get_port_pair_group": "rule:admin_or_owner"
"create_port_pair": "rule:regular_user"
"update_port_pair": "rule:admin_or_owner"
"delete_port_pair": "rule:admin_or_owner"
"get_port_pair": "rule:admin_or_owner"
"create_service_graph": "rule:regular_user"
"update_service_graph": "rule:admin_or_owner"
"delete_service_graph": "rule:admin_or_owner"
"get_service_graph": "rule:admin_or_owner"
"shared_firewall_groups": "field:firewall_groups:shared=True"
"create_firewall_group": "rule:regular_user"
"update_firewall_group": "rule:admin_or_owner"
"delete_firewall_group": "rule:admin_or_owner"
"create_firewall_group:shared": "rule:admin_only"
"update_firewall_group:shared": "rule:admin_only"
"delete_firewall_group:shared": "rule:admin_only"
"get_firewall_group": "rule:admin_or_owner or rule:shared_firewall_groups"
"shared_firewall_policies": "field:firewall_policies:shared=True"
"create_firewall_policy": "rule:regular_user"
"update_firewall_policy": "rule:admin_or_owner"
"delete_firewall_policy": "rule:admin_or_owner"
"create_firewall_policy:shared": "rule:admin_only"
"update_firewall_policy:shared": "rule:admin_only"
"delete_firewall_policy:shared": "rule:admin_only"
"get_firewall_policy": "rule:admin_or_owner or rule:shared_firewall_policies"
"shared_firewall_rules": "field:firewall_rules:shared=True"
"create_firewall_rule": "rule:regular_user"
"update_firewall_rule": "rule:admin_or_owner"
"delete_firewall_rule": "rule:admin_or_owner"
"create_firewall_rule:shared": "rule:admin_only"
"update_firewall_rule:shared": "rule:admin_only"
"delete_firewall_rule:shared": "rule:admin_only"
"get_firewall_rule": "rule:admin_or_owner or rule:shared_firewall_rules"
"insert_rule": "rule:admin_or_owner"
"remove_rule": "rule:admin_or_owner"
"create_endpoint_group": "rule:regular_user"
"update_endpoint_group": "rule:admin_or_owner"
"delete_endpoint_group": "rule:admin_or_owner"
"get_endpoint_group": "rule:admin_or_owner"
"create_ikepolicy": "rule:regular_user"
"update_ikepolicy": "rule:admin_or_owner"
"delete_ikepolicy": "rule:admin_or_owner"
"get_ikepolicy": "rule:admin_or_owner"
"create_ipsecpolicy": "rule:regular_user"
"update_ipsecpolicy": "rule:admin_or_owner"
"delete_ipsecpolicy": "rule:admin_or_owner"
"get_ipsecpolicy": "rule:admin_or_owner"
"create_ipsec_site_connection": "rule:regular_user"
"update_ipsec_site_connection": "rule:admin_or_owner"
"delete_ipsec_site_connection": "rule:admin_or_owner"
"get_ipsec_site_connection": "rule:admin_or_owner"
"create_vpnservice": "rule:regular_user"
"update_vpnservice": "rule:admin_or_owner"
"delete_vpnservice": "rule:admin_or_owner"
"get_vpnservice": "rule:admin_or_owner"
"create_tap_flow": "rule:admin_or_owner"
"update_tap_flow": "rule:admin_or_owner"
"get_tap_flow": "rule:admin_or_owner"
"delete_tap_flow": "rule:admin_or_owner"
"create_tap_service": "rule:admin_or_owner"
"update_tap_service": "rule:admin_or_owner"
"get_tap_service": "rule:admin_or_owner"
"delete_tap_service": "rule:admin_or_owner"
"context_is_admin": "role:admin"
"service_api": "role:service"
"owner": "tenant_id:%(tenant_id)s"
"admin_or_owner": "rule:context_is_admin or rule:owner"
"context_is_advsvc": "role:advsvc"
"admin_or_network_owner": "rule:context_is_admin or tenant_id:%(network:tenant_id)s"
"admin_owner_or_network_owner": "rule:owner or rule:admin_or_network_owner"
"network_owner": "tenant_id:%(network:tenant_id)s"
"admin_only": "rule:context_is_admin"
"regular_user": ""
"shared": "field:networks:shared=True"
"default": "rule:admin_or_owner"
"admin_or_ext_parent_owner": "rule:context_is_admin or tenant_id:%(ext_parent:tenant_id)s"
"ext_parent_owner": "tenant_id:%(ext_parent:tenant_id)s"
"sg_owner": "tenant_id:%(security_group:tenant_id)s"
"shared_address_groups": "field:address_groups:shared=True"
"get_address_group": "(rule:admin_only) or (role:reader and project_id:%(project_id)s) or rule:shared_address_groups"
"shared_address_scopes": "field:address_scopes:shared=True"
"create_address_scope": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_address_scope:shared": "rule:admin_only"
"get_address_scope": "rule:admin_only or role:reader and project_id:%(project_id)s or rule:shared_address_scopes"
"update_address_scope": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_address_scope:shared": "rule:admin_only"
"delete_address_scope": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"get_agent": "rule:admin_only"
"update_agent": "rule:admin_only"
"delete_agent": "rule:admin_only"
"create_dhcp-network": "rule:admin_only"
"get_dhcp-networks": "rule:admin_only"
"delete_dhcp-network": "rule:admin_only"
"create_l3-router": "rule:admin_only"
"get_l3-routers": "rule:admin_only"
"delete_l3-router": "rule:admin_only"
"get_dhcp-agents": "rule:admin_only"
"get_l3-agents": "rule:admin_only"
"get_auto_allocated_topology": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"delete_auto_allocated_topology": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"get_availability_zone": "role:reader"
"create_default_security_group_rule": "rule:admin_only"
"get_default_security_group_rule": "role:reader"
"delete_default_security_group_rule": "rule:admin_only"
"create_flavor": "rule:admin_only"
"get_flavor": "role:reader"
"update_flavor": "rule:admin_only"
"delete_flavor": "rule:admin_only"
"create_service_profile": "rule:admin_only"
"get_service_profile": "rule:admin_only"
"update_service_profile": "rule:admin_only"
"delete_service_profile": "rule:admin_only"
"get_flavor_service_profile": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"create_flavor_service_profile": "rule:admin_only"
"delete_flavor_service_profile": "rule:admin_only"
"create_floatingip": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_floatingip:floating_ip_address": "rule:admin_only"
"get_floatingip": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"get_floatingips_tags": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"update_floatingip": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_floatingips_tags": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"delete_floatingip": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"delete_floatingips_tags": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"get_floatingip_pool": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"create_floatingip_port_forwarding": "(rule:admin_only) or (role:member and rule:ext_parent_owner)"
"get_floatingip_port_forwarding": "(rule:admin_only) or (role:reader and rule:ext_parent_owner)"
"update_floatingip_port_forwarding": "(rule:admin_only) or (role:member and rule:ext_parent_owner)"
"delete_floatingip_port_forwarding": "(rule:admin_only) or (role:member and rule:ext_parent_owner)"
"create_router_conntrack_helper": "(rule:admin_only) or (role:member and project_id:%(project_id)s) or rule:ext_parent_owner"
"get_router_conntrack_helper": "(rule:admin_only) or (role:reader and project_id:%(project_id)s) or rule:ext_parent_owner"
"update_router_conntrack_helper": "(rule:admin_only) or (role:member and project_id:%(project_id)s) or rule:ext_parent_owner"
"delete_router_conntrack_helper": "(rule:admin_only) or (role:member and project_id:%(project_id)s) or rule:ext_parent_owner"
"create_local_ip": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"get_local_ip": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"update_local_ip": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"delete_local_ip": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_local_ip_port_association": "(rule:admin_only) or (role:member and project_id:%(project_id)s) or rule:ext_parent_owner"
"get_local_ip_port_association": "(rule:admin_only) or (role:reader and project_id:%(project_id)s) or rule:ext_parent_owner"
"delete_local_ip_port_association": "(rule:admin_only) or (role:member and project_id:%(project_id)s) or rule:ext_parent_owner"
"get_loggable_resource": "rule:admin_only"
"create_log": "rule:admin_only"
"get_log": "rule:admin_only"
"update_log": "rule:admin_only"
"delete_log": "rule:admin_only"
"create_metering_label": "rule:admin_only"
"get_metering_label": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"delete_metering_label": "rule:admin_only"
"create_metering_label_rule": "rule:admin_only"
"get_metering_label_rule": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"delete_metering_label_rule": "rule:admin_only"
"create_ndp_proxy": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"get_ndp_proxy": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"update_ndp_proxy": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"delete_ndp_proxy": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"external": "field:networks:router:external=True"
"create_network": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_network:shared": "rule:admin_only"
"create_network:router:external": "rule:admin_only"
"create_network:is_default": "rule:admin_only"
"create_network:port_security_enabled": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_network:segments": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_network:provider:network_type": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_network:provider:physical_network": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_network:provider:segmentation_id": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"get_network": "(rule:admin_only) or (role:reader and project_id:%(project_id)s) or rule:service_api or rule:shared or rule:external or rule:context_is_advsvc"
"get_network:segments": "rule:admin_only"
"get_network:provider:network_type": "rule:admin_only"
"get_network:provider:physical_network": "rule:admin_only"
"get_network:provider:segmentation_id": "rule:admin_only"
"get_networks_tags": "(rule:admin_only) or (role:reader and project_id:%(project_id)s) or rule:shared or rule:external or rule:context_is_advsvc"
"update_network": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_network:segments": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_network:shared": "rule:admin_only"
"update_network:provider:network_type": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_network:provider:physical_network": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_network:provider:segmentation_id": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_network:router:external": "rule:admin_only"
"update_network:is_default": "rule:admin_only"
"update_network:port_security_enabled": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_networks_tags": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"delete_network": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"delete_networks_tags": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"get_network_ip_availability": "rule:admin_only"
"create_network_segment_range": "rule:admin_only"
"get_network_segment_range": "rule:admin_only"
"get_network_segment_ranges_tags": "rule:admin_only"
"update_network_segment_range": "rule:admin_only"
"update_network_segment_ranges_tags": "rule:admin_only"
"delete_network_segment_range": "rule:admin_only"
"delete_network_segment_ranges_tags": "rule:admin_only"
"get_port_binding": "(rule:admin_only) or (rule:service_api)"
"create_port_binding": "rule:service_api"
"delete_port_binding": "rule:service_api"
"activate": "rule:service_api"
"network_device": "field:port:device_owner=~^network:"
"admin_or_data_plane_int": "rule:context_is_admin or role:data_plane_integrator"
"create_port": "(rule:admin_only) or (role:member and project_id:%(project_id)s) or rule:service_api"
"create_port:device_owner": "not rule:network_device or (rule:admin_only) or (rule:service_api) or role:member and rule:network_owner"
"create_port:mac_address": "(rule:admin_only) or (rule:service_api) or role:member and rule:network_owner"
"create_port:fixed_ips": "(rule:admin_only) or (rule:service_api) or role:member and rule:network_owner or rule:shared"
"create_port:fixed_ips:ip_address": "(rule:admin_only) or (rule:service_api) or role:member and rule:network_owner"
"create_port:fixed_ips:subnet_id": "(rule:admin_only) or (rule:service_api) or role:member and rule:network_owner or rule:shared"
"create_port:port_security_enabled": "(rule:admin_only) or (rule:service_api) or role:member and rule:network_owner"
"create_port:binding:host_id": "(rule:admin_only) or (rule:service_api)"
"create_port:binding:profile": "rule:service_api"
"create_port:binding:vnic_type": "(rule:admin_only) or (role:member and project_id:%(project_id)s) or rule:service_api"
"create_port:allowed_address_pairs": "(rule:admin_only) or (role:member and rule:network_owner)"
"create_port:allowed_address_pairs:mac_address": "(rule:admin_only) or (role:member and rule:network_owner)"
"create_port:allowed_address_pairs:ip_address": "(rule:admin_only) or (role:member and rule:network_owner)"
"create_port:hints": "rule:admin_only"
"get_port": "(rule:admin_only) or (rule:service_api) or role:reader and rule:network_owner or role:reader and project_id:%(project_id)s"
"get_port:binding:vif_type": "(rule:admin_only) or (rule:service_api)"
"get_port:binding:vif_details": "(rule:admin_only) or (rule:service_api)"
"get_port:binding:host_id": "(rule:admin_only) or (rule:service_api)"
"get_port:binding:profile": "(rule:admin_only) or (rule:service_api)"
"get_port:resource_request": "rule:admin_only"
"get_port:hints": "rule:admin_only"
"get_ports_tags": "rule:context_is_advsvc or (rule:admin_only) or (role:reader and rule:network_owner) or role:reader and project_id:%(project_id)s"
"update_port": "(rule:admin_only) or (rule:service_api) or role:member and project_id:%(project_id)s"
"update_port:device_owner": "not rule:network_device or (rule:admin_only) or (rule:service_api) or role:member and rule:network_owner"
"update_port:mac_address": "(rule:admin_only) or (rule:service_api)"
"update_port:fixed_ips": "(rule:admin_only) or (rule:service_api) or role:member and rule:network_owner"
"update_port:fixed_ips:ip_address": "(rule:admin_only) or (rule:service_api) or role:member and rule:network_owner"
"update_port:fixed_ips:subnet_id": "(rule:admin_only) or (rule:service_api) or role:member and rule:network_owner or rule:shared"
"update_port:port_security_enabled": "(rule:admin_only) or (rule:service_api) or role:member and rule:network_owner"
"update_port:binding:host_id": "(rule:admin_only) or (rule:service_api)"
"update_port:binding:profile": "rule:service_api"
"update_port:binding:vnic_type": "(rule:admin_only) or (rule:service_api) or role:member and project_id:%(project_id)s"
"update_port:allowed_address_pairs": "(rule:admin_only) or (role:member and rule:network_owner)"
"update_port:allowed_address_pairs:mac_address": "(rule:admin_only) or (role:member and rule:network_owner)"
"update_port:allowed_address_pairs:ip_address": "(rule:admin_only) or (role:member and rule:network_owner)"
"update_port:data_plane_status": "rule:admin_only or role:data_plane_integrator"
"update_port:hints": "rule:admin_only"
"update_ports_tags": "(rule:admin_only) or (role:member and project_id:%(project_id)s) or rule:context_is_advsvc"
"delete_port": "(rule:admin_only) or (rule:service_api) or role:member and rule:network_owner or role:member and project_id:%(project_id)s"
"delete_ports_tags": "rule:context_is_advsvc or role:member and project_id:%(project_id)s or (rule:admin_only) or (role:member and rule:network_owner)"
"shared_qos_policy": "field:policies:shared=True"
"get_policy": "(rule:admin_only) or (role:reader and project_id:%(project_id)s) or rule:shared_qos_policy"
"create_policy": "rule:admin_only"
"update_policy": "rule:admin_only"
"delete_policy": "rule:admin_only"
"get_rule_type": "role:reader"
"get_policy_bandwidth_limit_rule": "(rule:admin_only) or (role:reader and rule:ext_parent_owner)"
"create_policy_bandwidth_limit_rule": "rule:admin_only"
"update_policy_bandwidth_limit_rule": "rule:admin_only"
"delete_policy_bandwidth_limit_rule": "rule:admin_only"
"get_policy_packet_rate_limit_rule": "(rule:admin_only) or (role:reader and rule:ext_parent_owner)"
"create_policy_packet_rate_limit_rule": "rule:admin_only"
"update_policy_packet_rate_limit_rule": "rule:admin_only"
"delete_policy_packet_rate_limit_rule": "rule:admin_only"
"get_policy_dscp_marking_rule": "(rule:admin_only) or (role:reader and rule:ext_parent_owner)"
"create_policy_dscp_marking_rule": "rule:admin_only"
"update_policy_dscp_marking_rule": "rule:admin_only"
"delete_policy_dscp_marking_rule": "rule:admin_only"
"get_policy_minimum_bandwidth_rule": "(rule:admin_only) or (role:reader and rule:ext_parent_owner)"
"create_policy_minimum_bandwidth_rule": "rule:admin_only"
"update_policy_minimum_bandwidth_rule": "rule:admin_only"
"delete_policy_minimum_bandwidth_rule": "rule:admin_only"
"get_policy_minimum_packet_rate_rule": "(rule:admin_only) or (role:reader and rule:ext_parent_owner)"
"create_policy_minimum_packet_rate_rule": "rule:admin_only"
"update_policy_minimum_packet_rate_rule": "rule:admin_only"
"delete_policy_minimum_packet_rate_rule": "rule:admin_only"
"get_alias_bandwidth_limit_rule": "(rule:admin_only) or (role:reader and rule:ext_parent_owner)"
"update_alias_bandwidth_limit_rule": "rule:admin_only"
"delete_alias_bandwidth_limit_rule": "rule:admin_only"
"get_alias_dscp_marking_rule": "(rule:admin_only) or (role:reader and rule:ext_parent_owner)"
"update_alias_dscp_marking_rule": "rule:admin_only"
"delete_alias_dscp_marking_rule": "rule:admin_only"
"get_alias_minimum_bandwidth_rule": "(rule:admin_only) or (role:reader and rule:ext_parent_owner)"
"update_alias_minimum_bandwidth_rule": "rule:admin_only"
"delete_alias_minimum_bandwidth_rule": "rule:admin_only"
"get_alias_minimum_packet_rate_rule": "rule:get_policy_minimum_packet_rate_rule"
"update_alias_minimum_packet_rate_rule": "rule:update_policy_minimum_packet_rate_rule"
"delete_alias_minimum_packet_rate_rule": "rule:delete_policy_minimum_packet_rate_rule"
"get_quota": "rule:admin_only"
"update_quota": "rule:admin_only"
"delete_quota": "rule:admin_only"
"restrict_wildcard": "(not field:rbac_policy:target_tenant=* and not field:rbac_policy:target_project=*) or rule:admin_only"
"create_rbac_policy": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_rbac_policy:target_tenant": "rule:admin_only or (not field:rbac_policy:target_tenant=* and not field:rbac_policy:target_project=*)"
"update_rbac_policy": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_rbac_policy:target_tenant": "rule:admin_only or (not field:rbac_policy:target_tenant=* and not field:rbac_policy:target_project=*)"
"get_rbac_policy": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"delete_rbac_policy": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_router": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_router:distributed": "rule:admin_only"
"create_router:ha": "rule:admin_only"
"create_router:external_gateway_info": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_router:external_gateway_info:network_id": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_router:external_gateway_info:enable_snat": "rule:admin_only"
"create_router:external_gateway_info:external_fixed_ips": "rule:admin_only"
"create_router:enable_default_route_bfd": "rule:admin_only"
"create_router:enable_default_route_ecmp": "rule:admin_only"
"get_router": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"get_router:distributed": "rule:admin_only"
"get_router:ha": "rule:admin_only"
"get_routers_tags": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"update_router": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_router:distributed": "rule:admin_only"
"update_router:ha": "rule:admin_only"
"update_router:external_gateway_info": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_router:external_gateway_info:network_id": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_router:external_gateway_info:enable_snat": "rule:admin_only"
"update_router:external_gateway_info:external_fixed_ips": "rule:admin_only"
"update_router:enable_default_route_bfd": "rule:admin_only"
"update_router:enable_default_route_ecmp": "rule:admin_only"
"update_routers_tags": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"delete_router": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"delete_routers_tags": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"add_router_interface": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"remove_router_interface": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"add_extraroutes": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"remove_extraroutes": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"admin_or_sg_owner": "rule:context_is_admin or tenant_id:%(security_group:tenant_id)s"
"admin_owner_or_sg_owner": "rule:owner or rule:admin_or_sg_owner"
"shared_security_group": "field:security_groups:shared=True"
"rule_default_sg": "field:security_group_rules:belongs_to_default_sg=True"
"create_security_group": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"get_security_group": "(rule:admin_only) or (role:reader and project_id:%(project_id)s) or rule:shared_security_group"
"get_security_groups_tags": "(rule:admin_only) or (role:reader and project_id:%(project_id)s) or rule:shared_security_group"
"update_security_group": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_security_groups_tags": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"delete_security_group": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"delete_security_groups_tags": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_security_group_rule": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"get_security_group_rule": "(rule:admin_only) or (role:reader and project_id:%(project_id)s) or rule:sg_owner"
"delete_security_group_rule": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_segment": "rule:admin_only"
"get_segment": "rule:admin_only"
"get_segments_tags": "rule:admin_only"
"update_segment": "rule:admin_only"
"update_segments_tags": "rule:admin_only"
"delete_segment": "rule:admin_only"
"delete_segments_tags": "rule:admin_only"
"get_service_provider": "role:reader"
"create_subnet": "(rule:admin_only) or (role:member and rule:network_owner)"
"create_subnet:segment_id": "rule:admin_only"
"create_subnet:service_types": "rule:admin_only"
"get_subnet": "role:reader and project_id:%(project_id)s or rule:shared or (rule:admin_only) or (role:member and rule:network_owner)"
"get_subnet:segment_id": "rule:admin_only"
"get_subnets_tags": "role:reader and project_id:%(project_id)s or rule:shared or (rule:admin_only) or (role:member and rule:network_owner)"
"update_subnet": "role:member and project_id:%(project_id)s or (rule:admin_only) or (role:member and rule:network_owner)"
"update_subnet:segment_id": "rule:admin_only"
"update_subnet:service_types": "rule:admin_only"
"update_subnets_tags": "role:member and project_id:%(project_id)s or (rule:admin_only) or (role:member and rule:network_owner)"
"delete_subnet": "role:member and project_id:%(project_id)s or (rule:admin_only) or (role:member and rule:network_owner)"
"delete_subnets_tags": "role:member and project_id:%(project_id)s or (rule:admin_only) or (role:member and rule:network_owner)"
"shared_subnetpools": "field:subnetpools:shared=True"
"create_subnetpool": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_subnetpool:shared": "rule:admin_only"
"create_subnetpool:is_default": "rule:admin_only"
"get_subnetpool": "(rule:admin_only) or (role:reader and project_id:%(project_id)s) or rule:shared_subnetpools"
"get_subnetpools_tags": "(rule:admin_only) or (role:reader and project_id:%(project_id)s) or rule:shared_subnetpools"
"update_subnetpool": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_subnetpool:is_default": "rule:admin_only"
"update_subnetpools_tags": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"delete_subnetpool": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"delete_subnetpools_tags": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"onboard_network_subnets": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"add_prefixes": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"remove_prefixes": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"create_trunk": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"get_trunk": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"get_trunks_tags": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"update_trunk": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"update_trunks_tags": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"delete_trunk": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"delete_trunks_tags": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"get_subports": "(rule:admin_only) or (role:reader and project_id:%(project_id)s)"
"add_subports": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
"remove_subports": "(rule:admin_only) or (role:member and project_id:%(project_id)s)"
